// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rewriting.Context;

#nullable disable

namespace Rewriting.Context.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rewritingdb")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rewriting.Context.Entities.Offer", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ContractorUid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderUid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Uid");

                    b.HasIndex("ContractorUid");

                    b.HasIndex("OrderUid");

                    b.ToTable("offers", "rewritingdb");
                });

            modelBuilder.Entity("Rewriting.Context.Entities.Order", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientUid")
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ContractorUid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Uid");

                    b.HasIndex("ClientUid");

                    b.HasIndex("ContractorUid");

                    b.ToTable("order", "rewritingdb");
                });

            modelBuilder.Entity("Rewriting.Context.Entities.UserData", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<long>("CompletedContractsCount")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OrdersCount")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.ToTable("users_data", "rewritingdb");
                });

            modelBuilder.Entity("Rewriting.Context.Entities.Offer", b =>
                {
                    b.HasOne("Rewriting.Context.Entities.UserData", "Contractor")
                        .WithMany("Offers")
                        .HasForeignKey("ContractorUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rewriting.Context.Entities.Order", "Order")
                        .WithMany("Offers")
                        .HasForeignKey("OrderUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Rewriting.Context.Entities.Order", b =>
                {
                    b.HasOne("Rewriting.Context.Entities.UserData", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rewriting.Context.Entities.UserData", "Contractor")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractorUid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("Contractor");
                });

            modelBuilder.Entity("Rewriting.Context.Entities.Order", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Rewriting.Context.Entities.UserData", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Offers");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
