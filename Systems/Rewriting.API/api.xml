<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rewriting.API</name>
    </assembly>
    <members>
        <member name="M:Rewriting.API.Configuration.HealthCheckConfiguration.AddAppHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add HealthChecks service
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Rewriting.API.Configuration.HealthCheckConfiguration.UseAppHealthChecks(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Map health checks
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Rewriting.API.Configuration.LoggerConfiguration.AddAppLogger(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Setup Serilog as logger
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Rewriting.API.Configuration.SwaggerConfiguration.AddAppSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Rewriting.API.IdentitySettings)">
            <summary>
            Add swagger services with custom configuration
            </summary>
            <param name="services"></param>
            <param name="identitySettings">Identity server data</param>
            <returns></returns>
        </member>
        <member name="M:Rewriting.API.Configuration.SwaggerConfiguration.UseAppSwagger(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Register required swagger middlewares
            </summary>
            <param name="app"></param>
            <exception cref="!:ServiceNotFoundException">SwaggerSettings was not found in DI container</exception>
        </member>
        <member name="M:Rewriting.API.Configuration.VersioningConfiguration.AddAppVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Setup versioning for API
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Rewriting.API.Controllers.Accounts.UserAccountController.Register(Rewriting.API.Controllers.Accounts.RegisterUserRequest)">
            <summary>
            Register new user
            </summary>
            <param name="request">RegisterUserAccountRequest</param>
            <response code="200">Registered user model</response>
        </member>
        <member name="M:Rewriting.API.Controllers.Accounts.UserAccountController.ChangePassword(Rewriting.API.Controllers.Accounts.ChangePasswordRequest)">
            <summary>
            Change password
            </summary>
            <param name="request">ChangePasswordRequest</param>
            <response code="200">Success report</response>
        </member>
        <member name="M:Rewriting.API.Controllers.Orders.OrdersController.GetNewOrders">
            <summary>
            Get all the orders available for offers
            </summary>
            <returns>The List of OrderResponse representing new orders</returns>
        </member>
        <member name="M:Rewriting.API.Controllers.Orders.OrdersController.GetUserOrders">
            <summary>
            Get all the orders published by calling user
            </summary>
            <returns>The List of OrderResponse representing user's orders</returns>
            <exception cref="T:Rewriting.Common.Exceptions.ProcessException"></exception>
        </member>
        <member name="M:Rewriting.API.Controllers.Orders.OrdersController.GetOrderDetails(System.Guid)">
            <summary>
            Get delailed information about an order with specified Uid including offers and results
            </summary>
            <param name="orderUid">Uid of the target offer</param>
            <returns>OrderDetailsResponse</returns>
        </member>
        <member name="M:Rewriting.API.Controllers.Orders.OrdersController.AddOrder(Rewriting.API.Controllers.Orders.AddOrderRequest)">
            <summary>
            Add new order
            </summary>
            <param name="request">Add order request model</param>
            <returns>OrderDetailsResponse with information about created order</returns>
        </member>
        <member name="M:Rewriting.API.Controllers.Orders.OrdersController.CancelOrder(System.Guid)">
            <summary>
            Cancel order
            </summary>
            <param name="orderUid">Uid of target order</param>
            <returns></returns>
        </member>
        <member name="M:Rewriting.API.Controllers.Orders.OrdersController.DeleteOrder(System.Guid)">
            <summary>
            Delete order
            </summary>
            <param name="orderUid">Uid of target order</param>
            <returns></returns>
        </member>
    </members>
</doc>
