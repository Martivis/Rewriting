@inject IDialogService DialogService

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">

            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <div>
                        <MudText>Authorizing</MudText>
                        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
                    </div>
                </Authorizing>
                <NotAuthorized>
                    @if (@context.User.Identity?.IsAuthenticated == true)
                    {
                        <MudAlert Severity="Severity.Warning">You are not authorized to be here</MudAlert>
                    }
                    else
                    {
                        OpenLoginDialog();
                    }
                </NotAuthorized>
            </AuthorizeRouteView>

        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    private readonly DialogOptions dialogOptions = new()
    {
        CloseOnEscapeKey = true,
        CloseButton = true,
        DisableBackdropClick = true,
    };

    private void OpenLoginDialog()
    {
        DialogService.Show<LoginDialog>("Login", dialogOptions);
    }
}