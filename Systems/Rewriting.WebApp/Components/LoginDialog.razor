@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<MudDialog>
    <DialogContent>
        <div style="width: 500px">
            <MudForm @ref="_form" ReadOnly="false">

                @if (ShowError)
                {
                    <MudAlert Severity="Severity.Error">
                        @ErrorDescription
                    </MudAlert>
                }

                <MudTextField T="string" Label="Email" @bind-Value="_model.Email" For="@(() => _model.Email)"/>

                <MudTextField T="string" Label="Password" InputType="InputType.Password" @bind-Value="_model.Password" For="@(() => _model.Password)"/>

                <div class="d-flex align-center justify-space-between">
                    <MudCheckBox T="bool" Label="Remember me" @bind-Checked="_model.RememberMe" For="@(() => _model.RememberMe)" />
                </div>

            </MudForm>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton @onclick="Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private MudForm _form = new();
    private LoginModel _model = new();

    private bool ShowError;
    private string ErrorDescription = "";

    private async Task Submit()
    {
        var result = await AuthService.LoginAsync(_model);

        if (result.Successful)
        {
            Refresh();
            MudDialog.Close();
        }
        else
        {
            ErrorDescription = result.ErrorDescription;
            ShowError = true;
        }
    }

    private void Refresh()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}
